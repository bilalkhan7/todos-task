name: CI (backend + frontend)

on:
  push:
  pull_request:

jobs:
  backend-tests:
    name: Backend (Jest + Prisma)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testapp
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d testapp"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install root deps (respect peer deps)
        run: npm ci --legacy-peer-deps

      - name: Install backend deps (workspace)
        working-directory: apps/backend
        run: npm ci --legacy-peer-deps

      - name: Prisma generate (backend)
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testapp?schema=public
        run: npx prisma generate --schema=apps/backend/prisma/schema.prisma

      - name: Prisma migrate deploy (backend)
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testapp?schema=public
        run: npx prisma migrate deploy --schema=apps/backend/prisma/schema.prisma

      - name: Run backend tests (Jest)
        working-directory: apps/backend
        env:
          # match what you use locally for tests
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testapp?schema=public
          CORS_ORIGIN: http://localhost:4200
          SESSION_SECRET: test-secret
          TZ: UTC
        run: npx jest --config jest.config.ts --runInBand

  frontend-tests:
    name: Frontend (Jest)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install root deps (respect peer deps)
        run: npm ci --legacy-peer-deps

      - name: Install frontend deps (workspace)
        working-directory: apps/frontend
        run: npm ci --legacy-peer-deps

      - name: Run frontend tests (Jest)
        working-directory: apps/frontend
        env:
          TZ: UTC
        run: npx jest --config jest.config.ts --runInBand
