version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: todos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todos"]
      interval: 5s
      timeout: 5s
      retries: 30

  migrate:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    entrypoint: ["npx","prisma","migrate","deploy","--schema=apps/backend/prisma/schema.prisma"]
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/todos?schema=public
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    command: ["node","/workspace/apps/backend/dist/index.js"]
    environment:
      PORT: "4000"
      CORS_ORIGIN: "http://localhost:8080"
      SESSION_SECRET: "change-me-in-prod"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/todos?schema=public"
    ports: ["4000:4000"]
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports: ["8080:80"]
    depends_on:
      - backend

volumes:
  pgdata:
