{"ast":null,"code":"import _asyncToGenerator from \"D:/todos-task/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction RegisterPage_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport let RegisterPage = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class RegisterPage {\n    constructor() {\n      this.auth = inject(AuthService);\n      this.router = inject(Router);\n      this.name = '';\n      this.email = '';\n      this.password = '';\n      this.error = '';\n    }\n    submit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.error = '';\n        const result = yield _this.auth.register(_this.name, _this.email, _this.password); // 'registered' | 'exists' | 'error'\n        if (result === 'exists') {\n          _this.error = 'Account already exists. Please sign in.';\n          yield _this.router.navigate(['/login'], {\n            queryParams: {\n              email: _this.email\n            }\n          });\n          return;\n        }\n        if (result === 'error') {\n          _this.error = 'Registration failed. Please try again.';\n          return;\n        }\n        // success\n        yield _this.router.navigate(['/todos']);\n      })();\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function RegisterPage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterPage)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterPage,\n      selectors: [[\"app-register\"]],\n      decls: 14,\n      vars: 5,\n      consts: [[1, \"card\"], [1, \"stack\", 3, \"ngSubmit\"], [\"name\", \"name\", \"required\", \"\", \"placeholder\", \"Your name\", 1, \"input\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"email\", \"type\", \"email\", \"required\", \"\", \"placeholder\", \"Email\", 1, \"input\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", \"placeholder\", \"Password (min 8)\", 1, \"input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", 3, \"disabled\"], [1, \"error\"], [\"routerLink\", \"/login\"]],\n      template: function RegisterPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Create your account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterPage_Template_form_ngSubmit_3_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.name, $event) || (ctx.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵtext(8, \"Create account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(9, RegisterPage_Conditional_9_Template, 2, 1, \"p\", 6);\n          i0.ɵɵelementStart(10, \"small\");\n          i0.ɵɵtext(11, \"Already have an account? \");\n          i0.ɵɵelementStart(12, \"a\", 7);\n          i0.ɵɵtext(13, \"Sign in\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.name);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.name || !ctx.email || ctx.password.length < 8);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.error ? 9 : -1);\n        }\n      },\n      dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm, RouterLink],\n      styles: [\".stack[_ngcontent-%COMP%]{display:grid;gap:12px}.error[_ngcontent-%COMP%]{color:var(--danger);margin-top:4px}\"]\n    }));\n  }\n  _staticBlock();\n  return RegisterPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}