{"ast":null,"code":"import _asyncToGenerator from \"D:/todos-task/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { signal, computed, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TodoStore } from '../todos/todo.store';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class AuthService {\n    constructor() {\n      this.http = inject(HttpClient);\n      this.router = inject(Router);\n      this.todos = inject(TodoStore);\n      this.user = signal(null, ...(ngDevMode ? [{\n        debugName: \"user\"\n      }] : []));\n      this.isAuthenticated = computed(() => this.user() !== null, ...(ngDevMode ? [{\n        debugName: \"isAuthenticated\"\n      }] : []));\n    }\n    refreshSession() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const me = yield _this.http.get('/api/auth/me', {\n            withCredentials: true\n          }).toPromise();\n          _this.user.set(me ?? null);\n        } catch {\n          _this.user.set(null);\n        }\n      })();\n    }\n    register(name, email, password) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this2.http.post('/api/auth/register', {\n            name,\n            email,\n            password\n          }, {\n            withCredentials: true\n          }).toPromise();\n          yield _this2.refreshSession();\n          return 'registered';\n        } catch (err) {\n          if (err?.status === 409) return 'exists'; // email conflict\n          return 'error';\n        }\n      })();\n    }\n    login(email, password) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        yield _this3.http.post('/api/auth/login', {\n          email,\n          password\n        }, {\n          withCredentials: true\n        }).toPromise();\n        yield _this3.refreshSession();\n        yield _this3.router.navigateByUrl('/todos');\n      })();\n    }\n    /** Called by logout button AND by 401 interceptor via clearSession() */\n    logout() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this4.http.post('/api/auth/logout', {}, {\n            withCredentials: true\n          }).toPromise();\n        } catch {/* ignore */}\n        _this4.clearSession(); // clear UI state\n        yield _this4.router.navigateByUrl('/login'); // ⬅️ redirect away from /todos\n      })();\n    }\n    /** Used by interceptor on 401 */\n    clearSession() {\n      this.user.set(null);\n      this.todos.reset(); // empties lists so you don’t see previous user’s todos\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    }, this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    }));\n  }\n  _staticBlock();\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}