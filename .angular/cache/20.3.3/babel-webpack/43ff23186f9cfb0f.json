{"ast":null,"code":"import _asyncToGenerator from \"D:/todos-task/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TodoStore } from './todo.store';\nimport { AuthService } from '../core/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = a0 => [\"/todos\", a0];\nfunction TodoListPage_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TodoListPage_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\")(2, \"input\", 6);\n    i0.ɵɵlistener(\"change\", function TodoListPage_li_10_Template_input_change_2_listener() {\n      const t_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggle(t_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 7);\n    i0.ɵɵtext(5, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TodoListPage_li_10_Template_button_click_6_listener() {\n      const t_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.remove(t_r2.id));\n    });\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", t_r2.completed);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", t_r2.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, t_r2.id));\n  }\n}\nexport let TodoListPage = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class TodoListPage {\n    constructor() {\n      this.store = inject(TodoStore);\n      this.auth = inject(AuthService);\n      this.title = '';\n      this.description = '';\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // Kick session check (safe if already done)\n        yield _this.auth.ensureCsrfCookie();\n        yield _this.auth.refreshSession();\n        // Load todos when authenticated\n        if (_this.auth.isAuthenticated()) {\n          _this.store.load();\n        } else {\n          // reactively load if auth state flips to logged-in later\n          const s = _this.auth.isAuthenticated.effect?.bind?.(_this.auth);\n          // if you don’t have an effect helper, you can skip this; guard will already block\n          // For simplicity, we rely on the route guard above.\n        }\n      })();\n    }\n    ngOnDestroy() {\n      this.sub?.unsubscribe();\n    }\n    create() {\n      this.store.create({\n        title: this.title,\n        description: this.description || undefined\n      });\n      this.title = '';\n      this.description = '';\n    }\n    toggle(id) {\n      this.store.toggle(id);\n    }\n    remove(id) {\n      this.store.remove(id);\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function TodoListPage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TodoListPage)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TodoListPage,\n      selectors: [[\"app-todo-list\"]],\n      decls: 12,\n      vars: 8,\n      consts: [[1, \"inline\", 3, \"ngSubmit\"], [\"name\", \"title\", \"placeholder\", \"Title\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"description\", \"placeholder\", \"Description (optional)\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"change\", \"checked\"], [3, \"routerLink\"], [3, \"click\"]],\n      template: function TodoListPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Todos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function TodoListPage_Template_form_ngSubmit_2_listener() {\n            return ctx.create();\n          });\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TodoListPage_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.title, $event) || (ctx.title = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TodoListPage_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.description, $event) || (ctx.description = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵtext(6, \"Add\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, TodoListPage_div_7_Template, 2, 0, \"div\", 4);\n          i0.ɵɵpipe(8, \"async\");\n          i0.ɵɵelementStart(9, \"ul\");\n          i0.ɵɵtemplate(10, TodoListPage_li_10_Template, 8, 5, \"li\", 5);\n          i0.ɵɵpipe(11, \"async\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.title);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.description);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 4, ctx.store.loading$));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 6, ctx.store.items$));\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf, FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i1.AsyncPipe],\n      encapsulation: 2\n    }));\n  }\n  _staticBlock();\n  return TodoListPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}