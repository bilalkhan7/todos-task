{"ast":null,"code":"import _asyncToGenerator from \"D:/todos-task/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _setFunctionName from \"D:/todos-task/node_modules/@babel/runtime/helpers/esm/setFunctionName.js\";\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgIf } from '@angular/common';\nimport { AuthService } from '../core/auth.service';\nlet LoginPage = (_staticBlock => {\n  let _classDecorators = [Component({\n    standalone: true,\n    selector: 'app-login',\n    imports: [FormsModule, NgIf],\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss']\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  var LoginPage = (class {\n    constructor() {\n      this.auth = inject(AuthService);\n      this.router = inject(Router);\n      this.route = inject(ActivatedRoute);\n      this.email = '';\n      this.password = '';\n      this.error = '';\n    }\n    ngOnInit() {\n      const prefill = this.route.snapshot.queryParamMap.get('email');\n      if (prefill) this.email = prefill;\n    }\n    submit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.error = '';\n        try {\n          yield _this.auth.login(_this.email, _this.password);\n          _this.router.navigate(['/todos']);\n        } catch (e) {\n          _this.error = e?.error?.message ?? 'Invalid email or password.';\n        }\n      })();\n    }\n    static #_ = _staticBlock = () => (_setFunctionName(this, \"LoginPage\"), _classThis = this, (() => {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      LoginPage = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    })(), this);\n  }, _staticBlock());\n  return LoginPage = _classThis;\n})();\nexport { LoginPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}