{"ast":null,"code":"// apps/frontend/src/main.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideHttpClient, withFetch, withXsrfConfiguration\n// Uncomment if/when you add function-style interceptors:\n// withInterceptors,\n} from '@angular/common/http';\nimport { provideRouter } from '@angular/router';\nimport { AppComponent } from './app/app.component';\nimport { LoginPage } from './app/auth/login.page';\nimport { RegisterPage } from './app/auth/register.page';\nimport { TodoListPage } from './app/todos/todo-list.page';\nimport { TodoDetailPage } from './app/todos/todo-detail.page';\n// If you later add interceptors as HttpInterceptorFn:\n// import { authInterceptor } from './app/core/auth.interceptor';\n// import { csrfInterceptor } from './app/core/csrf.interceptor';\nconst routes = [{\n  path: 'login',\n  component: LoginPage\n}, {\n  path: 'register',\n  component: RegisterPage\n}, {\n  path: '',\n  pathMatch: 'full',\n  redirectTo: 'todos'\n}, {\n  path: 'todos',\n  component: TodoListPage\n}, {\n  path: 'todos/:id',\n  component: TodoDetailPage\n}, {\n  path: '**',\n  redirectTo: ''\n}];\nbootstrapApplication(AppComponent, {\n  providers: [provideRouter(routes), provideHttpClient(withFetch(),\n  // Match backend CSRF cookie/header names:\n  withXsrfConfiguration({\n    cookieName: 'XSRF-TOKEN',\n    headerName: 'X-XSRF-TOKEN'\n  }))]\n}).catch(err => console.error('[bootstrap] failed:', err));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}