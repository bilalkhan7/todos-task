{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../core/auth.service';\nimport * as i0 from \"@angular/core\";\nexport let TodoApi = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class TodoApi {\n    constructor() {\n      this.http = inject(HttpClient);\n      this.auth = inject(AuthService);\n    }\n    headers() {\n      const token = this.auth.csrf();\n      return token ? new HttpHeaders({\n        'X-CSRF-Token': token\n      }) : new HttpHeaders();\n    }\n    list() {\n      return this.http.get('/api/todos', {\n        withCredentials: true\n      });\n    }\n    get(id) {\n      return this.http.get(`/api/todos/${id}`, {\n        withCredentials: true\n      });\n    }\n    create(dto) {\n      return this.http.post('/api/todos', dto, {\n        withCredentials: true,\n        headers: this.headers()\n      });\n    }\n    update(id, dto) {\n      return this.http.patch(`/api/todos/${id}`, dto, {\n        withCredentials: true,\n        headers: this.headers()\n      });\n    }\n    delete(id) {\n      return this.http.delete(`/api/todos/${id}`, {\n        withCredentials: true,\n        headers: this.headers()\n      });\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function TodoApi_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TodoApi)();\n    }, this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TodoApi,\n      factory: TodoApi.ɵfac,\n      providedIn: 'root'\n    }));\n  }\n  _staticBlock();\n  return TodoApi;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}